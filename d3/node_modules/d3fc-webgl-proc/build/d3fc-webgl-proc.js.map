{"version":3,"file":"d3fc-webgl-proc.js","sources":["../wasm/d3fc-webgl-proc.js","../src/js/api.js","../src/js/circles.js","../src/js/shapes.js"],"sourcesContent":["\nvar Module = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(Module) {\n  Module = Module || {};\n\n// Copyright 2010 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module !== 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// {{PRE_JSES}}\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = {};\nvar key;\nfor (key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\n\nModule['arguments'] = [];\nModule['thisProgram'] = './this.program';\nModule['quit'] = function(status, toThrow) {\n  throw toThrow;\n};\nModule['preRun'] = [];\nModule['postRun'] = [];\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = false;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\nENVIRONMENT_IS_WEB = typeof window === 'object';\nENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\nENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)');\n}\n\n\n// Three configurations we can be running in:\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\n\n\n\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  } else {\n    return scriptDirectory + path;\n  }\n}\n\nif (ENVIRONMENT_IS_NODE) {\n  scriptDirectory = __dirname + '/';\n\n  // Expose functionality in the same simple way that the shells work\n  // Note that we pollute the global namespace here, otherwise we break in node\n  var nodeFS;\n  var nodePath;\n\n  Module['read'] = function shell_read(filename, binary) {\n    var ret;\n    ret = tryParseAsDataURI(filename);\n    if (!ret) {\n      if (!nodeFS) nodeFS = require('fs');\n      if (!nodePath) nodePath = require('path');\n      filename = nodePath['normalize'](filename);\n      ret = nodeFS['readFileSync'](filename);\n    }\n    return binary ? ret : ret.toString();\n  };\n\n  Module['readBinary'] = function readBinary(filename) {\n    var ret = Module['read'](filename, true);\n    if (!ret.buffer) {\n      ret = new Uint8Array(ret);\n    }\n    assert(ret.buffer);\n    return ret;\n  };\n\n  if (process['argv'].length > 1) {\n    Module['thisProgram'] = process['argv'][1].replace(/\\\\/g, '/');\n  }\n\n  Module['arguments'] = process['argv'].slice(2);\n\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n  // Currently node will swallow unhandled rejections, but this behavior is\n  // deprecated, and in the future it will exit with error status.\n  process['on']('unhandledRejection', abort);\n\n  Module['quit'] = function(status) {\n    process['exit'](status);\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n\n  if (typeof read != 'undefined') {\n    Module['read'] = function shell_read(f) {\n      var data = tryParseAsDataURI(f);\n      if (data) {\n        return intArrayToString(data);\n      }\n      return read(f);\n    };\n  }\n\n  Module['readBinary'] = function readBinary(f) {\n    var data;\n    data = tryParseAsDataURI(f);\n    if (data) {\n      return data;\n    }\n    if (typeof readbuffer === 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data === 'object');\n    return data;\n  };\n\n  if (typeof scriptArgs != 'undefined') {\n    Module['arguments'] = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    Module['arguments'] = arguments;\n  }\n\n  if (typeof quit === 'function') {\n    Module['quit'] = function(status) {\n      quit(status);\n    }\n  }\n} else\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE (and not _INSTANCE), this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n\n  Module['read'] = function shell_read(url) {\n    try {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n    } catch (err) {\n      var data = tryParseAsDataURI(url);\n      if (data) {\n        return intArrayToString(data);\n      }\n      throw err;\n    }\n  };\n\n  if (ENVIRONMENT_IS_WORKER) {\n    Module['readBinary'] = function readBinary(url) {\n      try {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(xhr.response);\n      } catch (err) {\n        var data = tryParseAsDataURI(url);\n        if (data) {\n          return data;\n        }\n        throw err;\n      }\n    };\n  }\n\n  Module['readAsync'] = function readAsync(url, onload, onerror) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function xhr_onload() {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      var data = tryParseAsDataURI(url);\n      if (data) {\n        onload(data.buffer);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  };\n\n  Module['setWindowTitle'] = function(title) { document.title = title };\n} else\n{\n  throw new Error('environment detection error');\n}\n\n// Set up the out() and err() hooks, which are how we can print to stdout or\n// stderr, respectively.\n// If the user provided Module.print or printErr, use that. Otherwise,\n// console.log is checked first, as 'print' on the web will open a print dialogue\n// printErr is preferable to console.warn (works better in shells)\n// bind(console) is necessary to fix IE/Edge closed dev tools panel behavior.\nvar out = Module['print'] || (typeof console !== 'undefined' ? console.log.bind(console) : (typeof print !== 'undefined' ? print : null));\nvar err = Module['printErr'] || (typeof printErr !== 'undefined' ? printErr : ((typeof console !== 'undefined' && console.warn.bind(console)) || out));\n\n// Merge back in the overrides\nfor (key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = undefined;\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\nassert(typeof Module['memoryInitializerPrefixURL'] === 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] === 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] === 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] === 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\n\n\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// {{PREAMBLE_ADDITIONS}}\n\nvar STACK_ALIGN = 16;\n\n// stack management, and other functionality that is provided by the compiled code,\n// should not be used before it is ready\nstackSave = stackRestore = stackAlloc = function() {\n  abort('cannot use the stack before compiled code is ready to run, and has provided stack access');\n};\n\nfunction staticAlloc(size) {\n  abort('staticAlloc is no longer available at runtime; instead, perform static allocations at compile time (using makeStaticAlloc)');\n}\n\nfunction dynamicAlloc(size) {\n  assert(DYNAMICTOP_PTR);\n  var ret = HEAP32[DYNAMICTOP_PTR>>2];\n  var end = (ret + size + 15) & -16;\n  if (end <= _emscripten_get_heap_size()) {\n    HEAP32[DYNAMICTOP_PTR>>2] = end;\n  } else {\n    var success = _emscripten_resize_heap(end);\n    if (!success) return 0;\n  }\n  return ret;\n}\n\nfunction alignMemory(size, factor) {\n  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default\n  return Math.ceil(size / factor) * factor;\n}\n\nfunction getNativeTypeSize(type) {\n  switch (type) {\n    case 'i1': case 'i8': return 1;\n    case 'i16': return 2;\n    case 'i32': return 4;\n    case 'i64': return 8;\n    case 'float': return 4;\n    case 'double': return 8;\n    default: {\n      if (type[type.length-1] === '*') {\n        return 4; // A pointer\n      } else if (type[0] === 'i') {\n        var bits = parseInt(type.substr(1));\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\n        return bits / 8;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n\nfunction warnOnce(text) {\n  if (!warnOnce.shown) warnOnce.shown = {};\n  if (!warnOnce.shown[text]) {\n    warnOnce.shown[text] = 1;\n    err(text);\n  }\n}\n\nvar asm2wasmImports = { // special asm2wasm imports\n    \"f64-rem\": function(x, y) {\n        return x % y;\n    },\n    \"debugger\": function() {\n        debugger;\n    }\n};\n\n\n\nvar jsCallStartIndex = 1;\nvar functionPointers = new Array(0);\n\n// Wraps a JS function as a wasm function with a given signature.\n// In the future, we may get a WebAssembly.Function constructor. Until then,\n// we create a wasm module that takes the JS function as an import with a given\n// signature, and re-exports that as a wasm function.\nfunction convertJsFunctionToWasm(func, sig) {\n  // The module is static, with the exception of the type section, which is\n  // generated based on the signature passed in.\n  var typeSection = [\n    0x01, // id: section,\n    0x00, // length: 0 (placeholder)\n    0x01, // count: 1\n    0x60, // form: func\n  ];\n  var sigRet = sig.slice(0, 1);\n  var sigParam = sig.slice(1);\n  var typeCodes = {\n    'i': 0x7f, // i32\n    'j': 0x7e, // i64\n    'f': 0x7d, // f32\n    'd': 0x7c, // f64\n  };\n\n  // Parameters, length + signatures\n  typeSection.push(sigParam.length);\n  for (var i = 0; i < sigParam.length; ++i) {\n    typeSection.push(typeCodes[sigParam[i]]);\n  }\n\n  // Return values, length + signatures\n  // With no multi-return in MVP, either 0 (void) or 1 (anything else)\n  if (sigRet == 'v') {\n    typeSection.push(0x00);\n  } else {\n    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);\n  }\n\n  // Write the overall length of the type section back into the section header\n  // (excepting the 2 bytes for the section id and length)\n  typeSection[1] = typeSection.length - 2;\n\n  // Rest of the module is static\n  var bytes = new Uint8Array([\n    0x00, 0x61, 0x73, 0x6d, // magic (\"\\0asm\")\n    0x01, 0x00, 0x00, 0x00, // version: 1\n  ].concat(typeSection, [\n    0x02, 0x07, // import section\n      // (import \"e\" \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,\n    0x07, 0x05, // export section\n      // (export \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x66, 0x00, 0x00,\n  ]));\n\n   // We can compile this wasm module synchronously because it is very small.\n  // This accepts an import (at \"e.f\"), that it reroutes to an export (at \"f\")\n  var module = new WebAssembly.Module(bytes);\n  var instance = new WebAssembly.Instance(module, {\n    e: {\n      f: func\n    }\n  });\n  var wrappedFunc = instance.exports.f;\n  return wrappedFunc;\n}\n\n// Add a wasm function to the table.\nfunction addFunctionWasm(func, sig) {\n  var table = wasmTable;\n  var ret = table.length;\n\n  // Grow the table\n  try {\n    table.grow(1);\n  } catch (err) {\n    if (!err instanceof RangeError) {\n      throw err;\n    }\n    throw 'Unable to grow wasm table. Use a higher value for RESERVED_FUNCTION_POINTERS or set ALLOW_TABLE_GROWTH.';\n  }\n\n  // Insert new element\n  try {\n    // Attempting to call this with JS function will cause of table.set() to fail\n    table.set(ret, func);\n  } catch (err) {\n    if (!err instanceof TypeError) {\n      throw err;\n    }\n    assert(typeof sig !== 'undefined', 'Missing signature argument to addFunction');\n    var wrapped = convertJsFunctionToWasm(func, sig);\n    table.set(ret, wrapped);\n  }\n\n  return ret;\n}\n\nfunction removeFunctionWasm(index) {\n  // TODO(sbc): Look into implementing this to allow re-using of table slots\n}\n\n// 'sig' parameter is required for the llvm backend but only when func is not\n// already a WebAssembly function.\nfunction addFunction(func, sig) {\n\n\n  var base = 0;\n  for (var i = base; i < base + 0; i++) {\n    if (!functionPointers[i]) {\n      functionPointers[i] = func;\n      return jsCallStartIndex + i;\n    }\n  }\n  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\n\n}\n\nfunction removeFunction(index) {\n\n  functionPointers[index-jsCallStartIndex] = null;\n}\n\nvar funcWrappers = {};\n\nfunction getFuncWrapper(func, sig) {\n  if (!func) return; // on null pointer, return undefined\n  assert(sig);\n  if (!funcWrappers[sig]) {\n    funcWrappers[sig] = {};\n  }\n  var sigCache = funcWrappers[sig];\n  if (!sigCache[func]) {\n    // optimize away arguments usage in common cases\n    if (sig.length === 1) {\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func);\n      };\n    } else if (sig.length === 2) {\n      sigCache[func] = function dynCall_wrapper(arg) {\n        return dynCall(sig, func, [arg]);\n      };\n    } else {\n      // general case\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func, Array.prototype.slice.call(arguments));\n      };\n    }\n  }\n  return sigCache[func];\n}\n\n\nfunction makeBigInt(low, high, unsigned) {\n  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));\n}\n\nfunction dynCall(sig, ptr, args) {\n  if (args && args.length) {\n    assert(args.length == sig.length-1);\n    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\n  } else {\n    assert(sig.length == 1);\n    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n    return Module['dynCall_' + sig].call(null, ptr);\n  }\n}\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = function(value) {\n  tempRet0 = value;\n}\n\nvar getTempRet0 = function() {\n  return tempRet0;\n}\n\nfunction getCompilerSetting(name) {\n  throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work';\n}\n\nvar Runtime = {\n  // helpful errors\n  getTempRet0: function() { abort('getTempRet0() is now a top-level function, after removing the Runtime object. Remove \"Runtime.\"') },\n  staticAlloc: function() { abort('staticAlloc() is now a top-level function, after removing the Runtime object. Remove \"Runtime.\"') },\n  stackAlloc: function() { abort('stackAlloc() is now a top-level function, after removing the Runtime object. Remove \"Runtime.\"') },\n};\n\n// The address globals begin at. Very low in memory, for code size and optimization opportunities.\n// Above 0 is static memory, starting with globals.\n// Then the stack.\n// Then 'dynamic' memory for sbrk.\nvar GLOBAL_BASE = 1024;\n\n\n\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\n\nif (typeof WebAssembly !== 'object') {\n  abort('No WebAssembly support found. Build with -s WASM=0 to target JavaScript instead.');\n}\n\n\n/** @type {function(number, string, boolean=)} */\nfunction getValue(ptr, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  return null;\n}\n\n\n\n\n// Wasm globals\n\nvar wasmMemory;\n\n// Potentially used for direct table calls.\nvar wasmTable;\n\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS = 0;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed: ' + text);\n  }\n}\n\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n  return func;\n}\n\n// C calling interface.\nfunction ccall(ident, returnType, argTypes, args, opts) {\n  // For fast lookup of conversion functions\n  var toC = {\n    'string': function(str) {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) { // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        var len = (str.length << 2) + 1;\n        ret = stackAlloc(len);\n        stringToUTF8(str, ret, len);\n      }\n      return ret;\n    },\n    'array': function(arr) {\n      var ret = stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    }\n  };\n\n  function convertReturnValue(ret) {\n    if (returnType === 'string') return UTF8ToString(ret);\n    if (returnType === 'boolean') return Boolean(ret);\n    return ret;\n  }\n\n  var func = getCFunc(ident);\n  var cArgs = [];\n  var stack = 0;\n  assert(returnType !== 'array', 'Return type should not be \"array\".');\n  if (args) {\n    for (var i = 0; i < args.length; i++) {\n      var converter = toC[argTypes[i]];\n      if (converter) {\n        if (stack === 0) stack = stackSave();\n        cArgs[i] = converter(args[i]);\n      } else {\n        cArgs[i] = args[i];\n      }\n    }\n  }\n  var ret = func.apply(null, cArgs);\n  ret = convertReturnValue(ret);\n  if (stack !== 0) stackRestore(stack);\n  return ret;\n}\n\nfunction cwrap(ident, returnType, argTypes, opts) {\n  return function() {\n    return ccall(ident, returnType, argTypes, arguments, opts);\n  }\n}\n\n/** @type {function(number, number, string, boolean=)} */\nfunction setValue(ptr, value, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n}\n\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\nvar ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk\nvar ALLOC_NONE = 3; // Do not allocate\n\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\n//             is a little tricky (see docs right below). The reason is that it is optimized\n//             for multiple syntaxes to save space in generated code. So you should\n//             normally not use allocate(), and instead allocate memory using _malloc(),\n//             initialize it with setValue(), and so forth.\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\n//        affect this!)\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\n//         or a single type which is used for the entire block. This only matters if there\n//         is initial data - if @slab is a number, then this does not matter at all and is\n//         ignored.\n// @allocator: How to allocate memory, see ALLOC_*\n/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */\nfunction allocate(slab, types, allocator, ptr) {\n  var zeroinit, size;\n  if (typeof slab === 'number') {\n    zeroinit = true;\n    size = slab;\n  } else {\n    zeroinit = false;\n    size = slab.length;\n  }\n\n  var singleType = typeof types === 'string' ? types : null;\n\n  var ret;\n  if (allocator == ALLOC_NONE) {\n    ret = ptr;\n  } else {\n    ret = [_malloc,\n    stackAlloc,\n    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));\n  }\n\n  if (zeroinit) {\n    var stop;\n    ptr = ret;\n    assert((ret & 3) == 0);\n    stop = ret + (size & ~3);\n    for (; ptr < stop; ptr += 4) {\n      HEAP32[((ptr)>>2)]=0;\n    }\n    stop = ret + size;\n    while (ptr < stop) {\n      HEAP8[((ptr++)>>0)]=0;\n    }\n    return ret;\n  }\n\n  if (singleType === 'i8') {\n    if (slab.subarray || slab.slice) {\n      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);\n    } else {\n      HEAPU8.set(new Uint8Array(slab), ret);\n    }\n    return ret;\n  }\n\n  var i = 0, type, typeSize, previousType;\n  while (i < size) {\n    var curr = slab[i];\n\n    type = singleType || types[i];\n    if (type === 0) {\n      i++;\n      continue;\n    }\n    assert(type, 'Must know what type to store in allocate!');\n\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\n\n    setValue(ret+i, curr, type);\n\n    // no need to look up size unless type changes, so cache it\n    if (previousType !== type) {\n      typeSize = getNativeTypeSize(type);\n      previousType = type;\n    }\n    i += typeSize;\n  }\n\n  return ret;\n}\n\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\nfunction getMemory(size) {\n  if (!runtimeInitialized) return dynamicAlloc(size);\n  return _malloc(size);\n}\n\n\n\n\n/** @type {function(number, number=)} */\nfunction Pointer_stringify(ptr, length) {\n  abort(\"this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!\");\n}\n\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction AsciiToString(ptr) {\n  var str = '';\n  while (1) {\n    var ch = HEAPU8[((ptr++)>>0)];\n    if (!ch) return str;\n    str += String.fromCharCode(ch);\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\n\nfunction stringToAscii(str, outPtr) {\n  return writeAsciiToMemory(str, outPtr, false);\n}\n\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)\n  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n  } else {\n    var str = '';\n    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that\n    while (idx < endPtr) {\n      // For UTF8 byte structure, see:\n      // http://en.wikipedia.org/wiki/UTF-8#Description\n      // https://www.ietf.org/rfc/rfc2279.txt\n      // https://tools.ietf.org/html/rfc3629\n      var u0 = u8Array[idx++];\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n      var u1 = u8Array[idx++] & 63;\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n      var u2 = u8Array[idx++] & 63;\n      if ((u0 & 0xF0) == 0xE0) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte 0x' + u0.toString(16) + ' encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!');\n        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);\n      }\n\n      if (u0 < 0x10000) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 0x10000;\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n      }\n    }\n  }\n  return str;\n}\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a\n// copy of that string as a Javascript String object.\n// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit\n//                 this parameter to scan the string until the first \\0 byte. If maxBytesToRead is\n//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the\n//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will\n//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)\n//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may\n//                 throw JS JIT optimizations off, so it is worth to consider consistently using one\n//                 style or the other.\n/**\n * @param {number} ptr\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.\n//   outIdx: The starting offset in the array to begin the copying.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array.\n//                    This count should include the null terminator,\n//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      outU8Array[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      outU8Array[outIdx++] = 0xC0 | (u >> 6);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      outU8Array[outIdx++] = 0xE0 | (u >> 12);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      if (u >= 0x200000) warnOnce('Invalid Unicode code point 0x' + u.toString(16) + ' encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).');\n      outU8Array[outIdx++] = 0xF0 | (u >> 18);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  outU8Array[outIdx] = 0;\n  return outIdx - startIdx;\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) ++len;\n    else if (u <= 0x7FF) len += 2;\n    else if (u <= 0xFFFF) len += 3;\n    else len += 4;\n  }\n  return len;\n}\n\n\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\nfunction UTF16ToString(ptr) {\n  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  while (HEAP16[idx]) ++idx;\n  endPtr = idx << 1;\n\n  if (endPtr - ptr > 32 && UTF16Decoder) {\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  } else {\n    var i = 0;\n\n    var str = '';\n    while (1) {\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n      if (codeUnit == 0) return str;\n      ++i;\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\n      str += String.fromCharCode(codeUnit);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[((outPtr)>>1)]=codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[((outPtr)>>1)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF16(str) {\n  return str.length*2;\n}\n\nfunction UTF32ToString(ptr) {\n  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n  var i = 0;\n\n  var str = '';\n  while (1) {\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n    if (utf32 == 0)\n      return str;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n    }\n    HEAP32[((outPtr)>>2)]=codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[((outPtr)>>2)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n\n  return len;\n}\n\n// Allocate heap space for a JS string, and write it there.\n// It is the responsibility of the caller to free() that memory.\nfunction allocateUTF8(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = _malloc(size);\n  if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Allocate stack space for a JS string, and write it there.\nfunction allocateUTF8OnStack(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Deprecated: This function should not be called because it is unsafe and does not provide\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\n// to be secure from out of bounds writes.\n/** @deprecated */\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\n\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\n  if (dontAddNull) {\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\n    // character that existed at the location where the null will be placed, and restore\n    // that after the write (below).\n    end = buffer + lengthBytesUTF8(string);\n    lastChar = HEAP8[end];\n  }\n  stringToUTF8(string, buffer, Infinity);\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\n}\n\nfunction writeArrayToMemory(array, buffer) {\n  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n  HEAP8.set(array, buffer);\n}\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n  for (var i = 0; i < str.length; ++i) {\n    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\n  }\n  // Null-terminate the pointer to the HEAP.\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\n}\n\n\n\n\n\nfunction demangle(func) {\n  warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');\n  return func;\n}\n\nfunction demangleAll(text) {\n  var regex =\n    /__Z[\\w\\d_]+/g;\n  return text.replace(regex,\n    function(x) {\n      var y = demangle(x);\n      return x === y ? x : (y + ' [' + x + ']');\n    });\n}\n\nfunction jsStackTrace() {\n  var err = new Error();\n  if (!err.stack) {\n    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\n    // so try that as a special-case.\n    try {\n      throw new Error(0);\n    } catch(e) {\n      err = e;\n    }\n    if (!err.stack) {\n      return '(no stack trace available)';\n    }\n  }\n  return err.stack.toString();\n}\n\nfunction stackTrace() {\n  var js = jsStackTrace();\n  if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\n  return demangleAll(js);\n}\n\n\n\n// Memory management\n\nvar PAGE_SIZE = 16384;\nvar WASM_PAGE_SIZE = 65536;\nvar ASMJS_PAGE_SIZE = 16777216;\n\nfunction alignUp(x, multiple) {\n  if (x % multiple > 0) {\n    x += multiple - (x % multiple);\n  }\n  return x;\n}\n\nvar HEAP,\n/** @type {ArrayBuffer} */\n  buffer,\n/** @type {Int8Array} */\n  HEAP8,\n/** @type {Uint8Array} */\n  HEAPU8,\n/** @type {Int16Array} */\n  HEAP16,\n/** @type {Uint16Array} */\n  HEAPU16,\n/** @type {Int32Array} */\n  HEAP32,\n/** @type {Uint32Array} */\n  HEAPU32,\n/** @type {Float32Array} */\n  HEAPF32,\n/** @type {Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBufferViews() {\n  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);\n}\n\n\nvar STATIC_BASE = 1024,\n    STACK_BASE = 3968,\n    STACKTOP = STACK_BASE,\n    STACK_MAX = 5246848,\n    DYNAMIC_BASE = 5246848,\n    DYNAMICTOP_PTR = 3936;\n\nassert(STACK_BASE % 16 === 0, 'stack must start aligned');\nassert(DYNAMIC_BASE % 16 === 0, 'heap must start aligned');\n\n\n\nvar TOTAL_STACK = 5242880;\nif (Module['TOTAL_STACK']) assert(TOTAL_STACK === Module['TOTAL_STACK'], 'the stack size can no longer be determined at runtime')\n\nvar INITIAL_TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;\nif (INITIAL_TOTAL_MEMORY < TOTAL_STACK) err('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');\n\n// Initialize the runtime's memory\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\nassert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,\n       'JS engine does not provide full typed array support');\n\n\n\n\n\n\n\n// Use a provided buffer, if there is one, or else allocate a new one\nif (Module['buffer']) {\n  buffer = Module['buffer'];\n  assert(buffer.byteLength === INITIAL_TOTAL_MEMORY, 'provided buffer should be ' + INITIAL_TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);\n} else {\n  // Use a WebAssembly memory where available\n  if (typeof WebAssembly === 'object' && typeof WebAssembly.Memory === 'function') {\n    assert(INITIAL_TOTAL_MEMORY % WASM_PAGE_SIZE === 0);\n    wasmMemory = new WebAssembly.Memory({ 'initial': INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE });\n    buffer = wasmMemory.buffer;\n  } else\n  {\n    buffer = new ArrayBuffer(INITIAL_TOTAL_MEMORY);\n  }\n  assert(buffer.byteLength === INITIAL_TOTAL_MEMORY);\n}\nupdateGlobalBufferViews();\n\n\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\n\n\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  assert((STACK_MAX & 3) == 0);\n  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;\n  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;\n}\n\nfunction checkStackCookie() {\n  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';\n}\n\nfunction abortStackOverflow(allocSize) {\n  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - stackSave() + allocSize) + ' bytes available!');\n}\n\n\n  HEAP32[0] = 0x63736d65; /* 'emsc' */\n\n\n\n// Endianness check (note: assumes compiler arch was little-endian)\nHEAP16[1] = 0x6373;\nif (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';\n\nfunction callRuntimeCallbacks(callbacks) {\n  while(callbacks.length > 0) {\n    var callback = callbacks.shift();\n    if (typeof callback == 'function') {\n      callback();\n      continue;\n    }\n    var func = callback.func;\n    if (typeof func === 'number') {\n      if (callback.arg === undefined) {\n        Module['dynCall_v'](func);\n      } else {\n        Module['dynCall_vi'](func, callback.arg);\n      }\n    } else {\n      func(callback.arg === undefined ? null : callback.arg);\n    }\n  }\n}\n\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\nvar runtimeExited = false;\n\n\nfunction preRun() {\n  // compatibility - merge in anything from Module['preRun'] at this time\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction ensureInitRuntime() {\n  checkStackCookie();\n  if (runtimeInitialized) return;\n  runtimeInitialized = true;\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  checkStackCookie();\n  \n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  checkStackCookie();\n  runtimeExited = true;\n}\n\nfunction postRun() {\n  checkStackCookie();\n  // compatibility - merge in anything from Module['postRun'] at this time\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\nfunction unSign(value, bits, ignore) {\n  if (value >= 0) {\n    return value;\n  }\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\n                    : Math.pow(2, bits)         + value;\n}\nfunction reSign(value, bits, ignore) {\n  if (value <= 0) {\n    return value;\n  }\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\n                        : Math.pow(2, bits-1);\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\n  }\n  return value;\n}\n\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\nvar Math_abs = Math.abs;\nvar Math_cos = Math.cos;\nvar Math_sin = Math.sin;\nvar Math_tan = Math.tan;\nvar Math_acos = Math.acos;\nvar Math_asin = Math.asin;\nvar Math_atan = Math.atan;\nvar Math_atan2 = Math.atan2;\nvar Math_exp = Math.exp;\nvar Math_log = Math.log;\nvar Math_sqrt = Math.sqrt;\nvar Math_ceil = Math.ceil;\nvar Math_floor = Math.floor;\nvar Math_pow = Math.pow;\nvar Math_imul = Math.imul;\nvar Math_fround = Math.fround;\nvar Math_round = Math.round;\nvar Math_min = Math.min;\nvar Math_max = Math.max;\nvar Math_clz32 = Math.clz32;\nvar Math_trunc = Math.trunc;\n\n\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\nModule[\"preloadedImages\"] = {}; // maps url to image data\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\n\n\nvar memoryInitializer = null;\n\n\n\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');\n  },\n  init: function() { FS.error() },\n  createDataFile: function() { FS.error() },\n  createPreloadedFile: function() { FS.error() },\n  createLazyFile: function() { FS.error() },\n  open: function() { FS.error() },\n  mkdev: function() { FS.error() },\n  registerDevice: function() { FS.error() },\n  analyzePath: function() { FS.error() },\n  loadFilesFromDB: function() { FS.error() },\n\n  ErrnoError: function ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  return String.prototype.startsWith ?\n      filename.startsWith(dataURIPrefix) :\n      filename.indexOf(dataURIPrefix) === 0;\n}\n\n\n\n\nvar wasmBinaryFile = 'data:application/octet-stream;base64,';\nif (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary() {\n  try {\n    if (Module['wasmBinary']) {\n      return new Uint8Array(Module['wasmBinary']);\n    }\n    var binary = tryParseAsDataURI(wasmBinaryFile);\n    if (binary) {\n      return binary;\n    }\n    if (Module['readBinary']) {\n      return Module['readBinary'](wasmBinaryFile);\n    } else {\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise() {\n  // if we don't have the binary yet, and have the Fetch api, use that\n  // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web\n  if (!Module['wasmBinary'] && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function') {\n    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n      if (!response['ok']) {\n        throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n      }\n      return response['arrayBuffer']();\n    }).catch(function () {\n      return getBinary();\n    });\n  }\n  // Otherwise, getBinary should be able to get it synchronously\n  return new Promise(function(resolve, reject) {\n    resolve(getBinary());\n  });\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm(env) {\n  // prepare imports\n  var info = {\n    'env': env\n    ,\n    'global': {\n      'NaN': NaN,\n      'Infinity': Infinity\n    },\n    'global.Math': Math,\n    'asm2wasm': asm2wasmImports\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n    Module['asm'] = exports;\n    removeRunDependency('wasm-instantiate');\n  }\n  addRunDependency('wasm-instantiate');\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\n  // to any other async startup actions they are performing.\n  if (Module['instantiateWasm']) {\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiatedSource(output) {\n    // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n      // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n      // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\n    receiveInstance(output['instance']);\n  }\n  function instantiateArrayBuffer(receiver) {\n    getBinaryPromise().then(function(binary) {\n      return WebAssembly.instantiate(binary, info);\n    }).then(receiver, function(reason) {\n      err('failed to asynchronously prepare wasm: ' + reason);\n      abort(reason);\n    });\n  }\n  // Prefer streaming instantiation if available.\n  if (!Module['wasmBinary'] &&\n      typeof WebAssembly.instantiateStreaming === 'function' &&\n      !isDataURI(wasmBinaryFile) &&\n      typeof fetch === 'function') {\n    WebAssembly.instantiateStreaming(fetch(wasmBinaryFile, { credentials: 'same-origin' }), info)\n      .then(receiveInstantiatedSource, function(reason) {\n        // We expect the most common failure cause to be a bad MIME type for the binary,\n        // in which case falling back to ArrayBuffer instantiation should work.\n        err('wasm streaming compile failed: ' + reason);\n        err('falling back to ArrayBuffer instantiation');\n        instantiateArrayBuffer(receiveInstantiatedSource);\n      });\n  } else {\n    instantiateArrayBuffer(receiveInstantiatedSource);\n  }\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Provide an \"asm.js function\" for the application, called to \"link\" the asm.js module. We instantiate\n// the wasm module at that time, and it receives imports and provides exports and so forth, the app\n// doesn't need to care that it is wasm or asm.js.\n\nModule['asm'] = function(global, env, providedBuffer) {\n  // memory was already allocated (so js could use the buffer)\n  env['memory'] = wasmMemory\n  ;\n  // import table\n  env['table'] = wasmTable = new WebAssembly.Table({\n    'initial': 14,\n    'maximum': 14,\n    'element': 'anyfunc'\n  });\n  // With the wasm backend __memory_base and __table_base and only needed for\n  // relocatable output.\n  env['__memory_base'] = 1024; // tell the memory segments where to place themselves\n  // table starts at 0 by default (even in dynamic linking, for the main module)\n  env['__table_base'] = 0;\n\n  var exports = createWasm(env);\n  assert(exports, 'binaryen setup failed (no wasm support?)');\n  return exports;\n};\n\n// === Body ===\n\nvar ASM_CONSTS = [];\n\n\n\n\n\n// STATICTOP = STATIC_BASE + 2944;\n/* global initializers */ /*__ATINIT__.push();*/\n\n\n\n\n\n\n\n\n/* no memory initializer */\nvar tempDoublePtr = 3952\nassert(tempDoublePtr % 8 == 0);\n\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n}\n\nfunction copyTempDouble(ptr) {\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\n}\n\n// {{PRE_LIBRARY}}\n\n\n  function ___lock() {}\n\n  \n  var SYSCALLS={buffers:[null,[],[]],printChar:function (stream, curr) {\n        var buffer = SYSCALLS.buffers[stream];\n        assert(buffer);\n        if (curr === 0 || curr === 10) {\n          (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n          buffer.length = 0;\n        } else {\n          buffer.push(curr);\n        }\n      },varargs:0,get:function (varargs) {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function () {\n        var ret = UTF8ToString(SYSCALLS.get());\n        return ret;\n      },get64:function () {\n        var low = SYSCALLS.get(), high = SYSCALLS.get();\n        if (low >= 0) assert(high === 0);\n        else assert(high === -1);\n        return low;\n      },getZero:function () {\n        assert(SYSCALLS.get() === 0);\n      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // llseek\n      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();\n      abort('it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM');\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  \n  function flush_NO_FILESYSTEM() {\n      // flush anything remaining in the buffers during shutdown\n      var fflush = Module[\"_fflush\"];\n      if (fflush) fflush(0);\n      var buffers = SYSCALLS.buffers;\n      if (buffers[1].length) SYSCALLS.printChar(1, 10);\n      if (buffers[2].length) SYSCALLS.printChar(2, 10);\n    }function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // writev\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAP32[(((iov)+(i*8))>>2)];\n        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n        for (var j = 0; j < len; j++) {\n          SYSCALLS.printChar(stream, HEAPU8[ptr+j]);\n        }\n        ret += len;\n      }\n      return ret;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // ioctl\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // close\n      var stream = SYSCALLS.getStreamFromFD();\n      abort('it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM');\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___unlock() {}\n\n  function _emscripten_get_heap_size() {\n      return HEAP8.length;\n    }\n\n  \n  function abortOnCannotGrowMemory(requestedSize) {\n      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + HEAP8.length + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');\n    }\n  \n  function emscripten_realloc_buffer(size) {\n      var PAGE_MULTIPLE = 65536;\n      size = alignUp(size, PAGE_MULTIPLE); // round up to wasm page size\n      var oldSize = buffer.byteLength;\n      // native wasm support\n      // note that this is *not* threadsafe. multiple threads can call .grow(), and each\n      // presents a delta, so in theory we may over-allocate here (e.g. if two threads\n      // ask to grow from 256MB to 512MB, we get 2 requests to add +256MB, and may end\n      // up growing to 768MB (even though we may have been able to make do with 512MB).\n      // TODO: consider decreasing the step sizes in emscripten_resize_heap\n      try {\n        var result = wasmMemory.grow((size - oldSize) / 65536); // .grow() takes a delta compared to the previous size\n        if (result !== (-1 | 0)) {\n          // success in native wasm memory growth, get the buffer from the memory\n          buffer = wasmMemory.buffer;\n          return true;\n        } else {\n          return false;\n        }\n      } catch(e) {\n        console.error('emscripten_realloc_buffer: Attempted to grow from ' + oldSize  + ' bytes to ' + size + ' bytes, but got error: ' + e);\n        return false;\n      }\n    }function _emscripten_resize_heap(requestedSize) {\n      var oldSize = _emscripten_get_heap_size();\n      // With pthreads, races can happen (another thread might increase the size in between), so return a failure, and let the caller retry.\n      assert(requestedSize > oldSize);\n  \n  \n      var PAGE_MULTIPLE = 65536;\n      var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.\n  \n      if (requestedSize > LIMIT) {\n        err('Cannot enlarge memory, asked to go up to ' + requestedSize + ' bytes, but the limit is ' + LIMIT + ' bytes!');\n        return false;\n      }\n  \n      var MIN_TOTAL_MEMORY = 16777216;\n      var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.\n  \n      // TODO: see realloc_buffer - for PTHREADS we may want to decrease these jumps\n      while (newSize < requestedSize) { // Keep incrementing the heap size as long as it's less than what is requested.\n        if (newSize <= 536870912) {\n          newSize = alignUp(2 * newSize, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...\n        } else {\n          // ..., but after that, add smaller increments towards 2GB, which we cannot reach\n          newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);\n          if (newSize === oldSize) {\n            warnOnce('Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only ' + HEAP8.length);\n          }\n        }\n      }\n  \n  \n      var start = Date.now();\n  \n      if (!emscripten_realloc_buffer(newSize)) {\n        err('Failed to grow the heap from ' + oldSize + ' bytes to ' + newSize + ' bytes, not enough memory!');\n        return false;\n      }\n  \n      updateGlobalBufferViews();\n  \n  \n  \n      return true;\n    }\n\n  var _llvm_cos_f32=Math_cos;\n\n  var _llvm_sin_f32=Math_sin;\n\n  \n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);\n    }\n  \n   \n\n   \n\n  \n  function ___setErrNo(value) {\n      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;\n      else err('failed to set errno from JS');\n      return value;\n    } \nvar ASSERTIONS = true;\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n/** @type {function(string, boolean=, number=)} */\nfunction intArrayFromString(stringy, dontAddNull, length) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xFF) {\n      if (ASSERTIONS) {\n        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\n      }\n      chr &= 0xFF;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join('');\n}\n\n\n// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149\n\n// This code was written by Tyler Akins and has been placed in the\n// public domain.  It would be nice if you left this header intact.\n// Base64 code from Tyler Akins -- http://rumkin.com\n\n/**\n * Decodes a base64 string.\n * @param {String} input The string to decode.\n */\nvar decodeBase64 = typeof atob === 'function' ? atob : function (input) {\n  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  var output = '';\n  var chr1, chr2, chr3;\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n  do {\n    enc1 = keyStr.indexOf(input.charAt(i++));\n    enc2 = keyStr.indexOf(input.charAt(i++));\n    enc3 = keyStr.indexOf(input.charAt(i++));\n    enc4 = keyStr.indexOf(input.charAt(i++));\n\n    chr1 = (enc1 << 2) | (enc2 >> 4);\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n    chr3 = ((enc3 & 3) << 6) | enc4;\n\n    output = output + String.fromCharCode(chr1);\n\n    if (enc3 !== 64) {\n      output = output + String.fromCharCode(chr2);\n    }\n    if (enc4 !== 64) {\n      output = output + String.fromCharCode(chr3);\n    }\n  } while (i < input.length);\n  return output;\n};\n\n// Converts a string of base64 into a byte array.\n// Throws error on invalid input.\nfunction intArrayFromBase64(s) {\n  if (typeof ENVIRONMENT_IS_NODE === 'boolean' && ENVIRONMENT_IS_NODE) {\n    var buf;\n    try {\n      buf = Buffer.from(s, 'base64');\n    } catch (_) {\n      buf = new Buffer(s, 'base64');\n    }\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  try {\n    var decoded = decodeBase64(s);\n    var bytes = new Uint8Array(decoded.length);\n    for (var i = 0 ; i < decoded.length ; ++i) {\n      bytes[i] = decoded.charCodeAt(i);\n    }\n    return bytes;\n  } catch (_) {\n    throw new Error('Converting base64 string to bytes failed.');\n  }\n}\n\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\nfunction tryParseAsDataURI(filename) {\n  if (!isDataURI(filename)) {\n    return;\n  }\n\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n}\n\n\n// ASM_LIBRARY EXTERN PRIMITIVES: Int8Array,Int32Array\n\n\nfunction nullFunc_ii(x) { err(\"Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iiii(x) { err(\"Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_jiji(x) { err(\"Invalid function pointer called with signature 'jiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nvar asmGlobalArg = {}\n\nvar asmLibraryArg = {\n  \"abort\": abort,\n  \"setTempRet0\": setTempRet0,\n  \"getTempRet0\": getTempRet0,\n  \"abortStackOverflow\": abortStackOverflow,\n  \"nullFunc_ii\": nullFunc_ii,\n  \"nullFunc_iiii\": nullFunc_iiii,\n  \"nullFunc_jiji\": nullFunc_jiji,\n  \"___lock\": ___lock,\n  \"___setErrNo\": ___setErrNo,\n  \"___syscall140\": ___syscall140,\n  \"___syscall146\": ___syscall146,\n  \"___syscall54\": ___syscall54,\n  \"___syscall6\": ___syscall6,\n  \"___unlock\": ___unlock,\n  \"_emscripten_get_heap_size\": _emscripten_get_heap_size,\n  \"_emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"_emscripten_resize_heap\": _emscripten_resize_heap,\n  \"_llvm_cos_f32\": _llvm_cos_f32,\n  \"_llvm_sin_f32\": _llvm_sin_f32,\n  \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory,\n  \"emscripten_realloc_buffer\": emscripten_realloc_buffer,\n  \"flush_NO_FILESYSTEM\": flush_NO_FILESYSTEM,\n  \"tempDoublePtr\": tempDoublePtr,\n  \"DYNAMICTOP_PTR\": DYNAMICTOP_PTR\n}\n// EMSCRIPTEN_START_ASM\nvar asm =Module[\"asm\"]// EMSCRIPTEN_END_ASM\n(asmGlobalArg, asmLibraryArg, buffer);\n\nvar real____errno_location = asm[\"___errno_location\"]; asm[\"___errno_location\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real____errno_location.apply(null, arguments);\n};\n\nvar real__fflush = asm[\"_fflush\"]; asm[\"_fflush\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__fflush.apply(null, arguments);\n};\n\nvar real__free = asm[\"_free\"]; asm[\"_free\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__free.apply(null, arguments);\n};\n\nvar real__generate_circles = asm[\"_generate_circles\"]; asm[\"_generate_circles\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__generate_circles.apply(null, arguments);\n};\n\nvar real__generate_shapes = asm[\"_generate_shapes\"]; asm[\"_generate_shapes\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__generate_shapes.apply(null, arguments);\n};\n\nvar real__main = asm[\"_main\"]; asm[\"_main\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__main.apply(null, arguments);\n};\n\nvar real__malloc = asm[\"_malloc\"]; asm[\"_malloc\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__malloc.apply(null, arguments);\n};\n\nvar real__sbrk = asm[\"_sbrk\"]; asm[\"_sbrk\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__sbrk.apply(null, arguments);\n};\n\nvar real_establishStackSpace = asm[\"establishStackSpace\"]; asm[\"establishStackSpace\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real_establishStackSpace.apply(null, arguments);\n};\n\nvar real_stackAlloc = asm[\"stackAlloc\"]; asm[\"stackAlloc\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real_stackAlloc.apply(null, arguments);\n};\n\nvar real_stackRestore = asm[\"stackRestore\"]; asm[\"stackRestore\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real_stackRestore.apply(null, arguments);\n};\n\nvar real_stackSave = asm[\"stackSave\"]; asm[\"stackSave\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real_stackSave.apply(null, arguments);\n};\nModule[\"asm\"] = asm;\nvar ___errno_location = Module[\"___errno_location\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___errno_location\"].apply(null, arguments) };\nvar _emscripten_replace_memory = Module[\"_emscripten_replace_memory\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null, arguments) };\nvar _fflush = Module[\"_fflush\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_fflush\"].apply(null, arguments) };\nvar _free = Module[\"_free\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_free\"].apply(null, arguments) };\nvar _generate_circles = Module[\"_generate_circles\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_generate_circles\"].apply(null, arguments) };\nvar _generate_shapes = Module[\"_generate_shapes\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_generate_shapes\"].apply(null, arguments) };\nvar _main = Module[\"_main\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_main\"].apply(null, arguments) };\nvar _malloc = Module[\"_malloc\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_malloc\"].apply(null, arguments) };\nvar _memcpy = Module[\"_memcpy\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_memcpy\"].apply(null, arguments) };\nvar _memset = Module[\"_memset\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_memset\"].apply(null, arguments) };\nvar _sbrk = Module[\"_sbrk\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_sbrk\"].apply(null, arguments) };\nvar establishStackSpace = Module[\"establishStackSpace\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"establishStackSpace\"].apply(null, arguments) };\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"stackAlloc\"].apply(null, arguments) };\nvar stackRestore = Module[\"stackRestore\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"stackRestore\"].apply(null, arguments) };\nvar stackSave = Module[\"stackSave\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"stackSave\"].apply(null, arguments) };\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_ii\"].apply(null, arguments) };\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_iiii\"].apply(null, arguments) };\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_jiji\"].apply(null, arguments) };\n;\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\nModule['asm'] = asm;\n\nif (!Module[\"intArrayFromString\"]) Module[\"intArrayFromString\"] = function() { abort(\"'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"intArrayToString\"]) Module[\"intArrayToString\"] = function() { abort(\"'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"ccall\"]) Module[\"ccall\"] = function() { abort(\"'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nModule[\"cwrap\"] = cwrap;\nif (!Module[\"setValue\"]) Module[\"setValue\"] = function() { abort(\"'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getValue\"]) Module[\"getValue\"] = function() { abort(\"'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"allocate\"]) Module[\"allocate\"] = function() { abort(\"'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getMemory\"]) Module[\"getMemory\"] = function() { abort(\"'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"AsciiToString\"]) Module[\"AsciiToString\"] = function() { abort(\"'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stringToAscii\"]) Module[\"stringToAscii\"] = function() { abort(\"'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"UTF8ArrayToString\"]) Module[\"UTF8ArrayToString\"] = function() { abort(\"'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"UTF8ToString\"]) Module[\"UTF8ToString\"] = function() { abort(\"'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stringToUTF8Array\"]) Module[\"stringToUTF8Array\"] = function() { abort(\"'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stringToUTF8\"]) Module[\"stringToUTF8\"] = function() { abort(\"'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"lengthBytesUTF8\"]) Module[\"lengthBytesUTF8\"] = function() { abort(\"'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"UTF16ToString\"]) Module[\"UTF16ToString\"] = function() { abort(\"'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stringToUTF16\"]) Module[\"stringToUTF16\"] = function() { abort(\"'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"lengthBytesUTF16\"]) Module[\"lengthBytesUTF16\"] = function() { abort(\"'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"UTF32ToString\"]) Module[\"UTF32ToString\"] = function() { abort(\"'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stringToUTF32\"]) Module[\"stringToUTF32\"] = function() { abort(\"'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"lengthBytesUTF32\"]) Module[\"lengthBytesUTF32\"] = function() { abort(\"'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"allocateUTF8\"]) Module[\"allocateUTF8\"] = function() { abort(\"'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stackTrace\"]) Module[\"stackTrace\"] = function() { abort(\"'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addOnPreRun\"]) Module[\"addOnPreRun\"] = function() { abort(\"'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addOnInit\"]) Module[\"addOnInit\"] = function() { abort(\"'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addOnPreMain\"]) Module[\"addOnPreMain\"] = function() { abort(\"'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addOnExit\"]) Module[\"addOnExit\"] = function() { abort(\"'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addOnPostRun\"]) Module[\"addOnPostRun\"] = function() { abort(\"'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"writeStringToMemory\"]) Module[\"writeStringToMemory\"] = function() { abort(\"'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"writeArrayToMemory\"]) Module[\"writeArrayToMemory\"] = function() { abort(\"'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"writeAsciiToMemory\"]) Module[\"writeAsciiToMemory\"] = function() { abort(\"'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addRunDependency\"]) Module[\"addRunDependency\"] = function() { abort(\"'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"removeRunDependency\"]) Module[\"removeRunDependency\"] = function() { abort(\"'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"ENV\"]) Module[\"ENV\"] = function() { abort(\"'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"FS\"]) Module[\"FS\"] = function() { abort(\"'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"FS_createFolder\"]) Module[\"FS_createFolder\"] = function() { abort(\"'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createPath\"]) Module[\"FS_createPath\"] = function() { abort(\"'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createDataFile\"]) Module[\"FS_createDataFile\"] = function() { abort(\"'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createPreloadedFile\"]) Module[\"FS_createPreloadedFile\"] = function() { abort(\"'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createLazyFile\"]) Module[\"FS_createLazyFile\"] = function() { abort(\"'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createLink\"]) Module[\"FS_createLink\"] = function() { abort(\"'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createDevice\"]) Module[\"FS_createDevice\"] = function() { abort(\"'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_unlink\"]) Module[\"FS_unlink\"] = function() { abort(\"'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"GL\"]) Module[\"GL\"] = function() { abort(\"'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"dynamicAlloc\"]) Module[\"dynamicAlloc\"] = function() { abort(\"'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"warnOnce\"]) Module[\"warnOnce\"] = function() { abort(\"'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"loadDynamicLibrary\"]) Module[\"loadDynamicLibrary\"] = function() { abort(\"'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"loadWebAssemblyModule\"]) Module[\"loadWebAssemblyModule\"] = function() { abort(\"'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getLEB\"]) Module[\"getLEB\"] = function() { abort(\"'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getFunctionTables\"]) Module[\"getFunctionTables\"] = function() { abort(\"'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"alignFunctionTables\"]) Module[\"alignFunctionTables\"] = function() { abort(\"'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"registerFunctions\"]) Module[\"registerFunctions\"] = function() { abort(\"'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addFunction\"]) Module[\"addFunction\"] = function() { abort(\"'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"removeFunction\"]) Module[\"removeFunction\"] = function() { abort(\"'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getFuncWrapper\"]) Module[\"getFuncWrapper\"] = function() { abort(\"'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"prettyPrint\"]) Module[\"prettyPrint\"] = function() { abort(\"'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"makeBigInt\"]) Module[\"makeBigInt\"] = function() { abort(\"'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"dynCall\"]) Module[\"dynCall\"] = function() { abort(\"'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getCompilerSetting\"]) Module[\"getCompilerSetting\"] = function() { abort(\"'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stackSave\"]) Module[\"stackSave\"] = function() { abort(\"'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stackRestore\"]) Module[\"stackRestore\"] = function() { abort(\"'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stackAlloc\"]) Module[\"stackAlloc\"] = function() { abort(\"'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"establishStackSpace\"]) Module[\"establishStackSpace\"] = function() { abort(\"'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"print\"]) Module[\"print\"] = function() { abort(\"'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"printErr\"]) Module[\"printErr\"] = function() { abort(\"'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getTempRet0\"]) Module[\"getTempRet0\"] = function() { abort(\"'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"setTempRet0\"]) Module[\"setTempRet0\"] = function() { abort(\"'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"Pointer_stringify\"]) Module[\"Pointer_stringify\"] = function() { abort(\"'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"writeStackCookie\"]) Module[\"writeStackCookie\"] = function() { abort(\"'writeStackCookie' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"checkStackCookie\"]) Module[\"checkStackCookie\"] = function() { abort(\"'checkStackCookie' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"abortStackOverflow\"]) Module[\"abortStackOverflow\"] = function() { abort(\"'abortStackOverflow' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"intArrayFromBase64\"]) Module[\"intArrayFromBase64\"] = function() { abort(\"'intArrayFromBase64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"tryParseAsDataURI\"]) Module[\"tryParseAsDataURI\"] = function() { abort(\"'tryParseAsDataURI' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };if (!Module[\"ALLOC_NORMAL\"]) Object.defineProperty(Module, \"ALLOC_NORMAL\", { get: function() { abort(\"'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Module[\"ALLOC_STACK\"]) Object.defineProperty(Module, \"ALLOC_STACK\", { get: function() { abort(\"'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Module[\"ALLOC_DYNAMIC\"]) Object.defineProperty(Module, \"ALLOC_DYNAMIC\", { get: function() { abort(\"'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Module[\"ALLOC_NONE\"]) Object.defineProperty(Module, \"ALLOC_NONE\", { get: function() { abort(\"'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\n\n\n\n// Modularize mode returns a function, which can be called to\n// create instances. The instances provide a then() method,\n// must like a Promise, that receives a callback. The callback\n// is called when the module is ready to run, with the module\n// as a parameter. (Like a Promise, it also returns the module\n// so you can use the output of .then(..)).\nModule['then'] = function(func) {\n  // We may already be ready to run code at this time. if\n  // so, just queue a call to the callback.\n  if (Module['calledRun']) {\n    func(Module);\n  } else {\n    // we are not ready to call then() yet. we must call it\n    // at the same time we would call onRuntimeInitialized.\n    var old = Module['onRuntimeInitialized'];\n    Module['onRuntimeInitialized'] = function() {\n      if (old) old();\n      func(Module);\n    };\n  }\n  return Module;\n};\n\n/**\n * @constructor\n * @extends {Error}\n * @this {ExitStatus}\n */\nfunction ExitStatus(status) {\n  this.name = \"ExitStatus\";\n  this.message = \"Program terminated with exit(\" + status + \")\";\n  this.status = status;\n};\nExitStatus.prototype = new Error();\nExitStatus.prototype.constructor = ExitStatus;\n\nvar calledMain = false;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!Module['calledRun']) run();\n  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n}\n\nModule['callMain'] = function callMain(args) {\n  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on Module[\"onRuntimeInitialized\"])');\n  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');\n\n  args = args || [];\n\n  ensureInitRuntime();\n\n  var argc = args.length+1;\n  var argv = stackAlloc((argc + 1) * 4);\n  HEAP32[argv >> 2] = allocateUTF8OnStack(Module['thisProgram']);\n  for (var i = 1; i < argc; i++) {\n    HEAP32[(argv >> 2) + i] = allocateUTF8OnStack(args[i - 1]);\n  }\n  HEAP32[(argv >> 2) + argc] = 0;\n\n\n  try {\n\n    var ret = Module['_main'](argc, argv, 0);\n\n\n    // if we're not running an evented main loop, it's time to exit\n      exit(ret, /* implicit = */ true);\n  }\n  catch(e) {\n    if (e instanceof ExitStatus) {\n      // exit() throws this once it's done to make sure execution\n      // has been stopped completely\n      return;\n    } else if (e == 'SimulateInfiniteLoop') {\n      // running an evented main loop, don't immediately exit\n      Module['noExitRuntime'] = true;\n      return;\n    } else {\n      var toLog = e;\n      if (e && typeof e === 'object' && e.stack) {\n        toLog = [e, e.stack];\n      }\n      err('exception thrown: ' + toLog);\n      Module['quit'](1, e);\n    }\n  } finally {\n    calledMain = true;\n  }\n}\n\n\n\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || Module['arguments'];\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n  writeStackCookie();\n\n  preRun();\n\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\n  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame\n\n  function doRun() {\n    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    ensureInitRuntime();\n\n    preMain();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    if (Module['_main'] && shouldRunNow) Module['callMain'](args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else {\n    doRun();\n  }\n  checkStackCookie();\n}\nModule['run'] = run;\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var print = out;\n  var printErr = err;\n  var has = false;\n  out = err = function(x) {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    var flush = flush_NO_FILESYSTEM;\n    if (flush) flush(0);\n  } catch(e) {}\n  out = print;\n  err = printErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -s FORCE_FILESYSTEM=1)');\n  }\n}\n\nfunction exit(status, implicit) {\n  checkUnflushedContent();\n\n  // if this is just main exit-ing implicitly, and the status is 0, then we\n  // don't need to do anything here and can just leave. if the status is\n  // non-zero, though, then we need to report it.\n  // (we may have warned about this earlier, if a situation justifies doing so)\n  if (implicit && Module['noExitRuntime'] && status === 0) {\n    return;\n  }\n\n  if (Module['noExitRuntime']) {\n    // if exit() was called, we may warn the user if the runtime isn't actually being shut down\n    if (!implicit) {\n      err('exit(' + status + ') called, but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)');\n    }\n  } else {\n\n    ABORT = true;\n    EXITSTATUS = status;\n\n    exitRuntime();\n\n    if (Module['onExit']) Module['onExit'](status);\n  }\n\n  Module['quit'](status, new ExitStatus(status));\n}\n\nvar abortDecorators = [];\n\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  if (what !== undefined) {\n    out(what);\n    err(what);\n    what = JSON.stringify(what)\n  } else {\n    what = '';\n  }\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  var extra = '';\n  var output = 'abort(' + what + ') at ' + stackTrace() + extra;\n  if (abortDecorators) {\n    abortDecorators.forEach(function(decorator) {\n      output = decorator(output, what);\n    });\n  }\n  throw output;\n}\nModule['abort'] = abort;\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n// shouldRunNow refers to calling main(), not run().\nvar shouldRunNow = true;\nif (Module['noInitialRun']) {\n  shouldRunNow = false;\n}\n\n  Module[\"noExitRuntime\"] = true;\n\nrun();\n\n\n\n\n\n// {{MODULE_ADDITIONS}}\n\n\n\n\n\n  return Module\n}\n);\n})();\nexport default Module;","import Module from '../../wasm/d3fc-webgl-proc';\r\n\r\nconst imports = {\r\n  print: (function() {\r\n    return (...args) => {\r\n      console.log(...args);\r\n    };\r\n  })()\r\n};\r\n\r\nexport const api = {};\r\nconst promise = new Promise(resolve => {\r\n  Module(imports).then(inst => {\r\n    Object.assign(api, getApi(inst));\r\n    resolve(api);\r\n  });\r\n});\r\nexport default () => promise;\r\n\r\nconst getApi = inst => ({\r\n  inst,\r\n  generate_circles: inst.cwrap('generate_circles', 'number', ['number', 'number', 'number', 'number', 'number']),\r\n  generate_shapes: inst.cwrap('generate_shapes', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'])\r\n});\r\n","import {api} from './api';\r\n\r\nexport default () => {\r\n  let pixelX = 1;\r\n  let pixelY = 1;\r\n  let callback = () => {};\r\n\r\n  const circles = (points, totalSegments) => {\r\n    const {inst, generate_circles} = api;\r\n    const segmentLen = totalSegments * 6;\r\n    let in_buffer;\r\n    let out_buffer;\r\n    try {\r\n      in_buffer = inst._malloc(points.length * Float32Array.BYTES_PER_ELEMENT);\r\n      out_buffer = inst._malloc(segmentLen * Float32Array.BYTES_PER_ELEMENT);\r\n\r\n      // Assign the data to the heap - Keep in mind bytes per element\r\n      inst.HEAPF32.set(points, in_buffer / Float32Array.BYTES_PER_ELEMENT);\r\n\r\n      generate_circles(in_buffer, points.length / 4, pixelX, pixelY, out_buffer);\r\n\r\n      callback(new Float32Array(inst.HEAPF32.buffer, out_buffer, segmentLen));\r\n    } finally {\r\n      inst._free(in_buffer);\r\n      inst._free(out_buffer);\r\n    }\r\n  };\r\n\r\n  circles.pixelX = (...args) => {\r\n    if (!args.length) {\r\n        return pixelX;\r\n    }\r\n    pixelX = args[0];\r\n    return circles;\r\n  };\r\n\r\n  circles.pixelY = (...args) => {\r\n    if (!args.length) {\r\n        return pixelY;\r\n    }\r\n    pixelY = args[0];\r\n    return circles;\r\n  };\r\n\r\n  circles.callback = (...args) => {\r\n    if (!args.length) {\r\n        return callback;\r\n    }\r\n    callback = args[0];\r\n    return circles;\r\n  };\r\n\r\n  return circles;\r\n};\r\n","import {api} from './api';\r\n\r\nexport default () => {\r\n  let pixelX = 1;\r\n  let pixelY = 1;\r\n  let shape = [];\r\n  let callback = () => {};\r\n\r\n  const shapes = (points) => {\r\n    const {inst, generate_shapes} = api;\r\n    const totalSegments = (points.length / 3) * (shape.length / 2 - 1);\r\n    const segmentLen = totalSegments * 6;\r\n    let in_buffer;\r\n    let shape_buffer;\r\n    let out_buffer;\r\n    try {\r\n      in_buffer = inst._malloc(points.length * Float32Array.BYTES_PER_ELEMENT);\r\n      shape_buffer = inst._malloc(shape.length * Float32Array.BYTES_PER_ELEMENT);\r\n      out_buffer = inst._malloc(segmentLen * Float32Array.BYTES_PER_ELEMENT);\r\n\r\n      // Assign the data to the heap - Keep in mind bytes per element\r\n      inst.HEAPF32.set(points, in_buffer / Float32Array.BYTES_PER_ELEMENT);\r\n      inst.HEAPF32.set(shape, shape_buffer / Float32Array.BYTES_PER_ELEMENT);\r\n\r\n      generate_shapes(in_buffer, points.length / 3, shape_buffer, shape.length / 2, pixelX, pixelY, out_buffer);\r\n\r\n      callback(new Float32Array(inst.HEAPF32.buffer, out_buffer, segmentLen));\r\n    } finally {\r\n      inst._free(in_buffer);\r\n      inst._free(shape_buffer);\r\n      inst._free(out_buffer);\r\n    }\r\n  };\r\n\r\n  shapes.pixelX = (...args) => {\r\n    if (!args.length) {\r\n        return pixelX;\r\n    }\r\n    pixelX = args[0];\r\n    return shapes;\r\n  };\r\n\r\n  shapes.pixelY = (...args) => {\r\n    if (!args.length) {\r\n        return pixelY;\r\n    }\r\n    pixelY = args[0];\r\n    return shapes;\r\n  };\r\n\r\n  shapes.shape = (...args) => {\r\n    if (!args.length) {\r\n        return shape;\r\n    }\r\n    shape = args[0];\r\n    return shapes;\r\n  };\r\n\r\n  shapes.callback = (...args) => {\r\n    if (!args.length) {\r\n        return callback;\r\n    }\r\n    callback = args[0];\r\n    return shapes;\r\n  };\r\n\r\n  return shapes;\r\n};\r\n"],"names":["Module","_scriptDir","document","currentScript","src","undefined","moduleOverrides","key","hasOwnProperty","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","require","Error","scriptDirectory","locateFile","path","__dirname","nodeFS","nodePath","shell_read","filename","binary","ret","tryParseAsDataURI","toString","readBinary","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","intArrayToString","readbuffer","scriptArgs","arguments","quit","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","err","responseType","response","readAsync","onload","onerror","xhr_onload","title","out","console","log","bind","print","printErr","warn","stackSave","stackRestore","stackAlloc","warnOnce","text","shown","asm2wasmImports","x","y","tempRet0","setTempRet0","value","getTempRet0","WebAssembly","wasmMemory","wasmTable","ABORT","condition","getCFunc","ident","func","ccall","returnType","argTypes","args","opts","toC","str","len","stringToUTF8","arr","writeArrayToMemory","convertReturnValue","UTF8ToString","Boolean","cArgs","stack","i","converter","apply","cwrap","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","u0","String","fromCharCode","u1","u2","ch","ptr","HEAPU8","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","lengthBytesUTF8","UTF16Decoder","allocateUTF8OnStack","size","HEAP8","array","set","demangle","demangleAll","regex","jsStackTrace","e","stackTrace","js","WASM_PAGE_SIZE","alignUp","multiple","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","STACK_BASE","STACKTOP","STACK_MAX","DYNAMIC_BASE","DYNAMICTOP_PTR","TOTAL_STACK","INITIAL_TOTAL_MEMORY","prototype","byteLength","Memory","ArrayBuffer","writeStackCookie","checkStackCookie","abortStackOverflow","allocSize","callRuntimeCallbacks","callbacks","callback","shift","arg","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeInitialized","runtimeExited","preRun","addOnPreRun","ensureInitRuntime","preMain","exitRuntime","postRun","addOnPostRun","cb","unshift","Math","imul","fround","clz32","trunc","Math_cos","cos","Math_sin","sin","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","addRunDependency","id","setInterval","clearInterval","dep","removeRunDependency","FS","error","init","createDataFile","createPreloadedFile","createLazyFile","mkdev","registerDevice","analyzePath","loadFilesFromDB","ErrnoError","dataURIPrefix","isDataURI","startsWith","wasmBinaryFile","getBinary","getBinaryPromise","fetch","credentials","then","Promise","resolve","reject","createWasm","env","info","NaN","Infinity","receiveInstance","instance","module","exports","trueModule","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","global","providedBuffer","Table","tempDoublePtr","___lock","SYSCALLS","buffers","printChar","stream","curr","push","varargs","get","getStr","get64","low","high","getZero","___syscall140","which","getStreamFromFD","offset_high","offset_low","result","whence","errno","flush_NO_FILESYSTEM","fflush","___syscall146","iov","iovcnt","j","___syscall54","___syscall6","___unlock","_emscripten_get_heap_size","abortOnCannotGrowMemory","requestedSize","emscripten_realloc_buffer","PAGE_MULTIPLE","oldSize","grow","_emscripten_resize_heap","LIMIT","MIN_TOTAL_MEMORY","newSize","max","min","_llvm_cos_f32","_llvm_sin_f32","_emscripten_memcpy_big","dest","num","___setErrNo","chr","join","decodeBase64","atob","input","keyStr","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charAt","intArrayFromBase64","s","buf","Buffer","from","_","byteOffset","decoded","bytes","nullFunc_ii","nullFunc_iiii","nullFunc_jiji","asmGlobalArg","asmLibraryArg","asm","real____errno_location","real__fflush","real__free","real__generate_circles","real__generate_shapes","real__main","real__malloc","real__sbrk","real_establishStackSpace","real_stackAlloc","real_stackRestore","real_stackSave","___errno_location","_emscripten_replace_memory","_fflush","_free","_generate_circles","_generate_shapes","_main","_malloc","_memcpy","_memset","_sbrk","establishStackSpace","dynCall_ii","dynCall_iiii","dynCall_jiji","Object","defineProperty","old","name","message","constructor","runCaller","run","callMain","argc","argv","exit","toLog","calledMain","doRun","shouldRunNow","setTimeout","checkUnflushedContent","has","flush","implicit","EXITSTATUS","abortDecorators","what","JSON","stringify","extra","forEach","decorator","pop","imports","api","promise","inst","assign","getApi","generate_circles","generate_shapes","pixelX","pixelY","circles","points","totalSegments","segmentLen","in_buffer","out_buffer","BYTES_PER_ELEMENT","shape","shapes","shape_buffer"],"mappings":"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"}